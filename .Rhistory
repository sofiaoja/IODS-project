# plot the lda results
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 10)
# predict classes with test data
lda.pred <- predict(lda.fit, newdata = test)
# cross tabulate the results
# High values between correct and predicted values, LDA model performs well when predicting on the new data.
table(correct = correct_classes, predicted = lda.pred$class)
# load the data
data("Boston")
# center and standardize variables
boston_scaled <- scale(Boston)
# change the object to data frame
boston_scaled <- as.data.frame(boston_scaled)
set.seed(123)
# euclidean distance matrix
dist_eu <- dist(boston_scaled)
# determine the number of clusters
k_max <- 10
# calculate the total within sum of squares
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
# visualize the results
plot(1:k_max, twcss, type='b')
# k-means clustering
km <-kmeans(dist_eu, centers = 2)
# plot the Boston dataset with clusters
pairs(boston_scaled, col = km$cluster)
# access the MASS package
library(MASS)
# load the data
data("Boston")
# explore the dataset
# 506 obs. of  14 variables
str(Boston)
summary(Boston)
# access the tidyverse libraries tidyr, dplyr, ggplot2
library(tidyr); library(dplyr); library(ggplot2); library(corrplot)
# calculate the correlation matrix and round it
cor_matrix<-cor(Boston)
# print the correlation matrix
cor_matrix %>% round(digits = 2)
# visualize the correlation matrix
# High correlation between variables rad and tax variables, also correlation between indus and nox, indus and tax, nox and age.
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
# center and standardize variables
boston_scaled <- scale(Boston)
# summaries of the scaled variables
summary(boston_scaled)
# change the object to data frame
boston_scaled <- as.data.frame(boston_scaled)
# save the scaled crim as scaled_crim
scaled_crim <- boston_scaled$crim
# create a quantile vector of crim and print it
bins <- quantile(scaled_crim)
# create a categorical variable 'crime'
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
# look at the table of the new factor crime
crime
# remove original crim from the dataset
boston_scaled <- dplyr::select(boston_scaled, -crim)
# add the new categorical value to scaled data
boston_scaled <- data.frame(boston_scaled, crime)
# number of rows in the Boston dataset
n <- nrow(boston_scaled)
# choose randomly 80% of the rows
ind <- sample(n,  size = n * 0.8)
# create train set
train <- boston_scaled[ind,]
# create test set
test <- boston_scaled[-ind,]
# save the correct classes from test data
correct_classes <- test$crime
# remove the crime variable from test data
test <- dplyr::select(test, -crime)
# linear discriminant analysis
lda.fit <- lda(crime ~ . , data = train)
# print the lda.fit object
lda.fit
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# target classes as numeric
classes <- as.numeric(train$crime)
# plot the lda results
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 10)
# predict classes with test data
lda.pred <- predict(lda.fit, newdata = test)
# cross tabulate the results
# High values between correct and predicted values, LDA model performs well when predicting on the new data.
table(correct = correct_classes, predicted = lda.pred$class)
# load the data
data("Boston")
# center and standardize variables
boston_scaled <- scale(Boston)
# change the object to data frame
boston_scaled <- as.data.frame(boston_scaled)
set.seed(123)
# euclidean distance matrix
dist_eu <- dist(boston_scaled)
# determine the number of clusters
k_max <- 10
# calculate the total within sum of squares
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
# visualize the results
plot(1:k_max, twcss, type='b')
# k-means clustering
km <-kmeans(dist_eu, centers = 5)
# plot the Boston dataset with clusters
pairs(boston_scaled, col = km$cluster)
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the dataset
# 506 obs. of  14 variables
str(hd)
dim(hd)
summary(hd)
# explore the dataset
# 506 obs. of  14 variables
str(gii)
dim(gii)
summary(gii)
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename interactively
#fix(mydata) # results are saved on close
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale."))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# you can re-enter all the variable names in order
# changing the ones you need to change.the limitation
# is that you need to enter all of them!
#names(mydata) <- c("x1","age","y", "ses")
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
# define a new column edu2Fperedu2M
gii <- mutate(gii, edu2Fperedu2M = (gii$PopulationwithSecondaryEducationFemale / gii$PopulationwithSecondaryEducationMale))
# define a new column labFperlabM
gii <- mutate(gii, labFperlabM = (gii$LabourForceParticipationRateFemale / gii$LabourForceParticipationRateMale))
gii$edu2Fperedu2M
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
# define a new column edu2Fperedu2M
gii <- mutate(gii, edu2Fperedu2M = (gii$PopulationwithSecondaryEducationFemale / gii$PopulationwithSecondaryEducationMale))
# define a new column labFperlabM
gii <- mutate(gii, labFperlabM = (gii$LabourForceParticipationRateFemale / gii$LabourForceParticipationRateMale))
# join the two datasets by the selected identifiers
human <- inner_join(gii$edu2Fperedu2M, gii$labFperlabM, by = gii$Country)
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
# define a new column edu2Fperedu2M
gii <- mutate(gii, edu2Fperedu2M = (gii$PopulationwithSecondaryEducationFemale / gii$PopulationwithSecondaryEducationMale))
# define a new column labFperlabM
gii <- mutate(gii, labFperlabM = (gii$LabourForceParticipationRateFemale / gii$LabourForceParticipationRateMale))
# join the two datasets by the selected identifiers
human <- inner_join(gii$edu2Fperedu2M, gii$labFperlabM, by = gii$Country)
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
hd$
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
# define a new column edu2Fperedu2M
gii <- mutate(gii, edu2Fperedu2M = (gii$PopulationwithSecondaryEducationFemale / gii$PopulationwithSecondaryEducationMale))
# define a new column labFperlabM
gii <- mutate(gii, labFperlabM = (gii$LabourForceParticipationRateFemale / gii$LabourForceParticipationRateMale))
# join the two datasets by the selected identifiers
human <- inner_join(gii$edu2Fperedu2M, gii$labFperlabM, by = gii$Country)
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
# define a new column edu2Fperedu2M
gii <- mutate(gii, edu2Fperedu2M = (gii$PopulationwithSecondaryEducationFemale / gii$PopulationwithSecondaryEducationMale))
# define a new column labFperlabM
gii <- mutate(gii, labFperlabM = (gii$LabourForceParticipationRateFemale / gii$LabourForceParticipationRateMale))
# common columns to use as identifiers
join_by <- c("Country")
# join the two datasets by the selected identifiers
human <- inner_join(gii$edu2Fperedu2M, gii$labFperlabM, by = join_by)
# Sofia 150217 RStudio Exercise 4: Clustering and Classification excercise
# title: New R script file for Data Wrangling created 150217
# author: Sofia Oja
# date: 15 helmikuuta 2017
# read the data into memory
# Human development
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the hd dataset
# 195 obs. of  8 variables
str(hd)
dim(hd)
summary(hd)
# explore the gii dataset
# 195 obs. of  10 variables
str(gii)
dim(gii)
summary(gii)
# rename programmatically
library(reshape)
hd <- rename(hd, c(HDI.Rank="HDIRank"))
#hd <- rename(hd, c(Country="newname"))
hd <- rename(hd, c(Human.Development.Index..HDI.="HDI"))
hd <- rename(hd, c(Life.Expectancy.at.Birth="LifeExpectancyatBirth"))
hd <- rename(hd, c(Expected.Years.of.Education="ExpectedYearsofEducation"))
hd <- rename(hd, c(Mean.Years.of.Education="MeanYearsofEducation"))
hd <- rename(hd, c(Gross.National.Income..GNI..per.Capita="GNIperCapita"))
hd <- rename(hd, c(GNI.per.Capita.Rank.Minus.HDI.Rank="GNIperCapitaRankMinusHDIRank"))
gii <- rename(gii, c(GII.Rank="GIIRank"))
#gii <- rename(gii, c(Country="newname"))
gii <- rename(gii, c(Gender.Inequality.Index..GII.="GII"))
gii <- rename(gii, c(Maternal.Mortality.Ratio="MaternalMortalityRatio"))
gii <- rename(gii, c(Adolescent.Birth.Rate="AdolescentBirthRate"))
gii <- rename(gii, c(Percent.Representation.in.Parliament="PercentRepresentationinParliament"))
gii <- rename(gii, c(Population.with.Secondary.Education..Female.="PopulationwithSecondaryEducationFemale"))
gii <- rename(gii, c(Population.with.Secondary.Education..Male.="PopulationwithSecondaryEducationMale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Female.="LabourForceParticipationRateFemale"))
gii <- rename(gii, c(Labour.Force.Participation.Rate..Male.="LabourForceParticipationRateMale"))
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
# define a new column edu2Fperedu2M
gii <- mutate(gii, edu2Fperedu2M = (gii$PopulationwithSecondaryEducationFemale / gii$PopulationwithSecondaryEducationMale))
# define a new column labFperlabM
gii <- mutate(gii, labFperlabM = (gii$LabourForceParticipationRateFemale / gii$LabourForceParticipationRateMale))
# access the dplyr library
library(dplyr)
# common columns to use as identifiers
join_by <- c("Country")
# join the two datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
setwd("~/GitHub/IODS-project")
# write CSV in R
write.csv2(human, file = "data/human.csv")
